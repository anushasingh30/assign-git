• What is a gitignore file and what should it include for a Java project? 
a gitignore file is a file tye that we specify to Git that it has to ignore. These are usually files or entities that we have built 
or that are generated by the machine. If a file is specified in gitignore, Git will not commit that. These files are tracked in a file 
named .gitignore. 
For a Java project, the .gitignore file should include: 
-all the package files (such as .jar, .war, .rar)
-the log files, including the crash log files (.log)
-compiled class files (.class)
-IDE files (.ctxt)
-Mobile tools for Java files


• What does fast-forward in Git mean?
When we merge a branch that is ahead of our checked-out branch, Git performs a fast forward. Basically, if we create a branch and want to 
merge it with master, if the master has not diverged, instead of Git making/creating a new commit, it will point the pointer to the 
last commit of the branch which we are merging. This is known as fast-forward. 

• Why should you have different branches? 
In a project, when there a numerous people working on the same thing, it is easy to mess up the source code when multiple people are 
making changes to it. If we have different branches, any changes you make in a branch, as long as it is not commited to the master,
will not affect the main code. You will always be able to merge the master in your test branch and then merge your code to the master,
ensuring that the code is compatible and still works. Hence, having different branches is alway recommended.

• In a project how many remote Git repositories do you usually have?
In a project you can have as many remote repositories as we want. However, it is best practice to have one origin repository and use 
to propose changes to the project, fork a repository. The project owner will take a look at what changes you proposed they will have
the option to pull the changes into their original repository.